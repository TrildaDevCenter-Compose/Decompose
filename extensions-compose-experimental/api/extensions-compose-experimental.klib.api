// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, macosArm64, macosX64, wasmJs]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.arkivanov.decompose:extensions-compose-experimental>
abstract fun interface <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation { // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation|null[0]
    abstract fun invoke(com.arkivanov.decompose.router.stack/ChildStack<#A, #B>, androidx.compose.ui/Modifier, kotlin/Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, com.arkivanov.decompose/Child.Created<#A, #B>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation.invoke|invoke(com.arkivanov.decompose.router.stack.ChildStack<1:0,1:1>;androidx.compose.ui.Modifier;kotlin.Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,com.arkivanov.decompose.Child.Created<1:0,1:1>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
}

abstract fun interface com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator { // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator|null[0]
    abstract fun (com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope).animate(com.arkivanov.decompose.extensions.compose.stack.animation/Direction, androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.ui/Modifier // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator.animate|animate@com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope(com.arkivanov.decompose.extensions.compose.stack.animation.Direction;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
}

abstract interface com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsLayout { // com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsLayout|null[0]
    abstract fun Layout(com.arkivanov.decompose.router.panels/ChildPanelsMode, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsLayout.Layout|Layout(com.arkivanov.decompose.router.panels.ChildPanelsMode;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
}

abstract interface com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationProvider { // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationProvider|null[0]
    abstract fun <#A1: kotlin/Any, #B1: kotlin/Any> provide(): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation<#A1, #B1>? // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationProvider.provide|provide(){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
}

abstract interface com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope : androidx.compose.animation/AnimatedVisibilityScope { // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope|null[0]
    abstract val stackAnimationDirection // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope.stackAnimationDirection|{}stackAnimationDirection[0]
        abstract fun <get-stackAnimationDirection>(): com.arkivanov.decompose.extensions.compose.stack.animation/Direction? // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope.stackAnimationDirection.<get-stackAnimationDirection>|<get-stackAnimationDirection>(){}[0]
}

final class com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsAnimators { // com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsAnimators|null[0]
    constructor <init>(com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator? = ..., kotlin/Pair<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator?, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator?> = ..., kotlin/Triple<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator?, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator?, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator?> = ...) // com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsAnimators.<init>|<init>(com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimator?;kotlin.Pair<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimator?,com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimator?>;kotlin.Triple<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimator?,com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimator?,com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimator?>){}[0]

    final val dual // com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsAnimators.dual|{}dual[0]
        final fun <get-dual>(): kotlin/Pair<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator?, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator?> // com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsAnimators.dual.<get-dual>|<get-dual>(){}[0]
    final val single // com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsAnimators.single|{}single[0]
        final fun <get-single>(): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator? // com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsAnimators.single.<get-single>|<get-single>(){}[0]
    final val triple // com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsAnimators.triple|{}triple[0]
        final fun <get-triple>(): kotlin/Triple<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator?, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator?, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator?> // com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsAnimators.triple.<get-triple>|<get-triple>(){}[0]
}

final class com.arkivanov.decompose.extensions.compose.experimental.panels/HorizontalChildPanelsLayout : com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsLayout { // com.arkivanov.decompose.extensions.compose.experimental.panels/HorizontalChildPanelsLayout|null[0]
    constructor <init>(kotlin/Pair<kotlin/Float, kotlin/Float> = ..., kotlin/Triple<kotlin/Float, kotlin/Float, kotlin/Float> = ...) // com.arkivanov.decompose.extensions.compose.experimental.panels/HorizontalChildPanelsLayout.<init>|<init>(kotlin.Pair<kotlin.Float,kotlin.Float>;kotlin.Triple<kotlin.Float,kotlin.Float,kotlin.Float>){}[0]

    final fun Layout(com.arkivanov.decompose.router.panels/ChildPanelsMode, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // com.arkivanov.decompose.extensions.compose.experimental.panels/HorizontalChildPanelsLayout.Layout|Layout(com.arkivanov.decompose.router.panels.ChildPanelsMode;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
}

final class com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams { // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams|null[0]
    constructor <init>(com.arkivanov.essenty.backhandler/BackHandler, kotlin/Function0<kotlin/Unit>, kotlin/Function1<com.arkivanov.essenty.backhandler/BackEvent, com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable?> = ...) // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams.<init>|<init>(com.arkivanov.essenty.backhandler.BackHandler;kotlin.Function0<kotlin.Unit>;kotlin.Function1<com.arkivanov.essenty.backhandler.BackEvent,com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback.PredictiveBackAnimatable?>){}[0]

    final val animatable // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams.animatable|{}animatable[0]
        final fun <get-animatable>(): kotlin/Function1<com.arkivanov.essenty.backhandler/BackEvent, com.arkivanov.decompose.extensions.compose.stack.animation.predictiveback/PredictiveBackAnimatable?> // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams.animatable.<get-animatable>|<get-animatable>(){}[0]
    final val backHandler // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams.backHandler|{}backHandler[0]
        final fun <get-backHandler>(): com.arkivanov.essenty.backhandler/BackHandler // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams.backHandler.<get-backHandler>|<get-backHandler>(){}[0]
    final val onBack // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams.onBack|{}onBack[0]
        final fun <get-onBack>(): kotlin/Function0<kotlin/Unit> // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams.onBack.<get-onBack>|<get-onBack>(){}[0]
}

final val com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_ChildPanelsAnimators$stableprop // com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_ChildPanelsAnimators$stableprop|#static{}com_arkivanov_decompose_extensions_compose_experimental_panels_ChildPanelsAnimators$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_HorizontalChildPanelsLayout$stableprop // com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_HorizontalChildPanelsLayout$stableprop|#static{}com_arkivanov_decompose_extensions_compose_experimental_panels_HorizontalChildPanelsLayout$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_PanelChild_Empty$stableprop // com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_PanelChild_Empty$stableprop|#static{}com_arkivanov_decompose_extensions_compose_experimental_panels_PanelChild_Empty$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_PanelChild_Panel$stableprop // com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_PanelChild_Panel$stableprop|#static{}com_arkivanov_decompose_extensions_compose_experimental_panels_PanelChild_Panel$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.experimental.stack.animation/LocalStackAnimationProvider // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/LocalStackAnimationProvider|{}LocalStackAnimationProvider[0]
    final fun <get-LocalStackAnimationProvider>(): androidx.compose.runtime/ProvidableCompositionLocal<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationProvider> // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/LocalStackAnimationProvider.<get-LocalStackAnimationProvider>|<get-LocalStackAnimationProvider>(){}[0]
final val com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimation$stableprop // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimation$stableprop|#static{}com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimation$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimator$stableprop // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimator$stableprop|#static{}com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimator$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_PredictiveBackParams$stableprop // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_PredictiveBackParams$stableprop|#static{}com_arkivanov_decompose_extensions_compose_experimental_stack_animation_PredictiveBackParams$stableprop[0]
final val com.arkivanov.decompose.extensions.compose.experimental/com_arkivanov_decompose_extensions_compose_experimental_BroadcastBackHandler$stableprop // com.arkivanov.decompose.extensions.compose.experimental/com_arkivanov_decompose_extensions_compose_experimental_BroadcastBackHandler$stableprop|#static{}com_arkivanov_decompose_extensions_compose_experimental_BroadcastBackHandler$stableprop[0]

final fun (com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator).com.arkivanov.decompose.extensions.compose.experimental.stack.animation/plus(com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/plus|plus@com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimator(com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimator){}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any, #C: kotlin/Any, #D: kotlin/Any, #E: kotlin/Any, #F: kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanels(com.arkivanov.decompose.router.panels/ChildPanels<#A, #B, #C, #D, #E, #F>, kotlin/Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, com.arkivanov.decompose/Child.Created<#A, #B>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, kotlin/Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, com.arkivanov.decompose/Child.Created<#C, #D>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, kotlin/Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, com.arkivanov.decompose/Child.Created<#E, #F>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.ui/Modifier?, kotlin/Function3<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function3<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsLayout?, com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsAnimators?, kotlin/Function1<com.arkivanov.decompose.router.panels/ChildPanels<#A, #B, #C, #D, #E, #F>, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams?>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanels|ChildPanels(com.arkivanov.decompose.router.panels.ChildPanels<0:0,0:1,0:2,0:3,0:4,0:5>;kotlin.Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,com.arkivanov.decompose.Child.Created<0:0,0:1>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;kotlin.Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,com.arkivanov.decompose.Child.Created<0:2,0:3>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;kotlin.Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,com.arkivanov.decompose.Child.Created<0:4,0:5>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.ui.Modifier?;kotlin.Function3<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function3<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;com.arkivanov.decompose.extensions.compose.experimental.panels.ChildPanelsLayout?;com.arkivanov.decompose.extensions.compose.experimental.panels.ChildPanelsAnimators?;kotlin.Function1<com.arkivanov.decompose.router.panels.ChildPanels<0:0,0:1,0:2,0:3,0:4,0:5>,com.arkivanov.decompose.extensions.compose.experimental.stack.animation.PredictiveBackParams?>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<kotlin.Any>;1ยง<kotlin.Any>;2ยง<kotlin.Any>;3ยง<kotlin.Any>;4ยง<kotlin.Any>;5ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any, #C: kotlin/Any, #D: kotlin/Any, #E: kotlin/Any, #F: kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanels(com.arkivanov.decompose.value/Value<com.arkivanov.decompose.router.panels/ChildPanels<#A, #B, #C, #D, #E, #F>>, kotlin/Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, com.arkivanov.decompose/Child.Created<#A, #B>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, kotlin/Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, com.arkivanov.decompose/Child.Created<#C, #D>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, kotlin/Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, com.arkivanov.decompose/Child.Created<#E, #F>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.ui/Modifier?, kotlin/Function3<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function3<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsLayout?, com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsAnimators?, kotlin/Function1<com.arkivanov.decompose.router.panels/ChildPanels<#A, #B, #C, #D, #E, #F>, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams?>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanels|ChildPanels(com.arkivanov.decompose.value.Value<com.arkivanov.decompose.router.panels.ChildPanels<0:0,0:1,0:2,0:3,0:4,0:5>>;kotlin.Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,com.arkivanov.decompose.Child.Created<0:0,0:1>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;kotlin.Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,com.arkivanov.decompose.Child.Created<0:2,0:3>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;kotlin.Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,com.arkivanov.decompose.Child.Created<0:4,0:5>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.ui.Modifier?;kotlin.Function3<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function3<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;com.arkivanov.decompose.extensions.compose.experimental.panels.ChildPanelsLayout?;com.arkivanov.decompose.extensions.compose.experimental.panels.ChildPanelsAnimators?;kotlin.Function1<com.arkivanov.decompose.router.panels.ChildPanels<0:0,0:1,0:2,0:3,0:4,0:5>,com.arkivanov.decompose.extensions.compose.experimental.stack.animation.PredictiveBackParams?>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<kotlin.Any>;1ยง<kotlin.Any>;2ยง<kotlin.Any>;3ยง<kotlin.Any>;4ยง<kotlin.Any>;5ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any, #C: kotlin/Any, #D: kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanels(com.arkivanov.decompose.router.panels/ChildPanels<#A, #B, #C, #D, kotlin/Nothing, kotlin/Nothing>, kotlin/Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, com.arkivanov.decompose/Child.Created<#A, #B>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, kotlin/Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, com.arkivanov.decompose/Child.Created<#C, #D>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.ui/Modifier?, kotlin/Function3<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsLayout?, com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsAnimators?, kotlin/Function1<com.arkivanov.decompose.router.panels/ChildPanels<#A, #B, #C, #D, kotlin/Nothing, kotlin/Nothing>, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams?>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanels|ChildPanels(com.arkivanov.decompose.router.panels.ChildPanels<0:0,0:1,0:2,0:3,kotlin.Nothing,kotlin.Nothing>;kotlin.Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,com.arkivanov.decompose.Child.Created<0:0,0:1>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;kotlin.Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,com.arkivanov.decompose.Child.Created<0:2,0:3>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.ui.Modifier?;kotlin.Function3<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;com.arkivanov.decompose.extensions.compose.experimental.panels.ChildPanelsLayout?;com.arkivanov.decompose.extensions.compose.experimental.panels.ChildPanelsAnimators?;kotlin.Function1<com.arkivanov.decompose.router.panels.ChildPanels<0:0,0:1,0:2,0:3,kotlin.Nothing,kotlin.Nothing>,com.arkivanov.decompose.extensions.compose.experimental.stack.animation.PredictiveBackParams?>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<kotlin.Any>;1ยง<kotlin.Any>;2ยง<kotlin.Any>;3ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any, #C: kotlin/Any, #D: kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanels(com.arkivanov.decompose.value/Value<com.arkivanov.decompose.router.panels/ChildPanels<#A, #B, #C, #D, kotlin/Nothing, kotlin/Nothing>>, kotlin/Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, com.arkivanov.decompose/Child.Created<#A, #B>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, kotlin/Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, com.arkivanov.decompose/Child.Created<#C, #D>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.ui/Modifier?, kotlin/Function3<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsLayout?, com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanelsAnimators?, kotlin/Function1<com.arkivanov.decompose.router.panels/ChildPanels<#A, #B, #C, #D, kotlin/Nothing, kotlin/Nothing>, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams?>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.experimental.panels/ChildPanels|ChildPanels(com.arkivanov.decompose.value.Value<com.arkivanov.decompose.router.panels.ChildPanels<0:0,0:1,0:2,0:3,kotlin.Nothing,kotlin.Nothing>>;kotlin.Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,com.arkivanov.decompose.Child.Created<0:0,0:1>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;kotlin.Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,com.arkivanov.decompose.Child.Created<0:2,0:3>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.ui.Modifier?;kotlin.Function3<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;com.arkivanov.decompose.extensions.compose.experimental.panels.ChildPanelsLayout?;com.arkivanov.decompose.extensions.compose.experimental.panels.ChildPanelsAnimators?;kotlin.Function1<com.arkivanov.decompose.router.panels.ChildPanels<0:0,0:1,0:2,0:3,kotlin.Nothing,kotlin.Nothing>,com.arkivanov.decompose.extensions.compose.experimental.stack.animation.PredictiveBackParams?>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<kotlin.Any>;1ยง<kotlin.Any>;2ยง<kotlin.Any>;3ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.stack.animation/stackAnimation(com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator? = ..., kotlin/Boolean = ..., kotlin/Function1<com.arkivanov.decompose.router.stack/ChildStack<#A, #B>, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams?> = ...): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation<#A, #B> // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/stackAnimation|stackAnimation(com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimator?;kotlin.Boolean;kotlin.Function1<com.arkivanov.decompose.router.stack.ChildStack<0:0,0:1>,com.arkivanov.decompose.extensions.compose.experimental.stack.animation.PredictiveBackParams?>){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.stack.animation/stackAnimation(kotlin/Boolean = ..., kotlin/Function1<com.arkivanov.decompose.router.stack/ChildStack<#A, #B>, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/PredictiveBackParams?> = ..., kotlin/Function4<com.arkivanov.decompose/Child.Created<#A, #B>, com.arkivanov.decompose/Child.Created<#A, #B>, com.arkivanov.decompose.extensions.compose.stack.animation/Direction, kotlin/Boolean, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator?>): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation<#A, #B> // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/stackAnimation|stackAnimation(kotlin.Boolean;kotlin.Function1<com.arkivanov.decompose.router.stack.ChildStack<0:0,0:1>,com.arkivanov.decompose.extensions.compose.experimental.stack.animation.PredictiveBackParams?>;kotlin.Function4<com.arkivanov.decompose.Child.Created<0:0,0:1>,com.arkivanov.decompose.Child.Created<0:0,0:1>,com.arkivanov.decompose.extensions.compose.stack.animation.Direction,kotlin.Boolean,com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimator?>){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.stack/ChildStack(com.arkivanov.decompose.router.stack/ChildStack<#A, #B>, androidx.compose.ui/Modifier?, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation<#A, #B>?, kotlin/Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, com.arkivanov.decompose/Child.Created<#A, #B>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.experimental.stack/ChildStack|ChildStack(com.arkivanov.decompose.router.stack.ChildStack<0:0,0:1>;androidx.compose.ui.Modifier?;com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimation<0:0,0:1>?;kotlin.Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,com.arkivanov.decompose.Child.Created<0:0,0:1>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> com.arkivanov.decompose.extensions.compose.experimental.stack/ChildStack(com.arkivanov.decompose.value/Value<com.arkivanov.decompose.router.stack/ChildStack<#A, #B>>, androidx.compose.ui/Modifier?, com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimation<#A, #B>?, kotlin/Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimationScope, com.arkivanov.decompose/Child.Created<#A, #B>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.arkivanov.decompose.extensions.compose.experimental.stack/ChildStack|ChildStack(com.arkivanov.decompose.value.Value<com.arkivanov.decompose.router.stack.ChildStack<0:0,0:1>>;androidx.compose.ui.Modifier?;com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimation<0:0,0:1>?;kotlin.Function4<com.arkivanov.decompose.extensions.compose.experimental.stack.animation.StackAnimationScope,com.arkivanov.decompose.Child.Created<0:0,0:1>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_ChildPanelsAnimators$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_ChildPanelsAnimators$stableprop_getter|com_arkivanov_decompose_extensions_compose_experimental_panels_ChildPanelsAnimators$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_HorizontalChildPanelsLayout$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_HorizontalChildPanelsLayout$stableprop_getter|com_arkivanov_decompose_extensions_compose_experimental_panels_HorizontalChildPanelsLayout$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_PanelChild_Empty$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_PanelChild_Empty$stableprop_getter|com_arkivanov_decompose_extensions_compose_experimental_panels_PanelChild_Empty$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_PanelChild_Panel$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.experimental.panels/com_arkivanov_decompose_extensions_compose_experimental_panels_PanelChild_Panel$stableprop_getter|com_arkivanov_decompose_extensions_compose_experimental_panels_PanelChild_Panel$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimation$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimation$stableprop_getter|com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimation$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimator$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimator$stableprop_getter|com_arkivanov_decompose_extensions_compose_experimental_stack_animation_DefaultStackAnimator$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_PredictiveBackParams$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/com_arkivanov_decompose_extensions_compose_experimental_stack_animation_PredictiveBackParams$stableprop_getter|com_arkivanov_decompose_extensions_compose_experimental_stack_animation_PredictiveBackParams$stableprop_getter(){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.stack.animation/fade(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., kotlin/Float = ...): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/fade|fade(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;kotlin.Float){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.stack.animation/scale(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., kotlin/Float = ..., kotlin/Float = ...): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/scale|scale(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;kotlin.Float;kotlin.Float){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.stack.animation/slide(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., androidx.compose.foundation.gestures/Orientation = ...): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/slide|slide(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;androidx.compose.foundation.gestures.Orientation){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental.stack.animation/stackAnimator(androidx.compose.animation.core/FiniteAnimationSpec<kotlin/Float> = ..., kotlin/Function4<kotlin/Float, com.arkivanov.decompose.extensions.compose.stack.animation/Direction, androidx.compose.runtime/Composer, kotlin/Int, androidx.compose.ui/Modifier>): com.arkivanov.decompose.extensions.compose.experimental.stack.animation/StackAnimator // com.arkivanov.decompose.extensions.compose.experimental.stack.animation/stackAnimator|stackAnimator(androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>;kotlin.Function4<kotlin.Float,com.arkivanov.decompose.extensions.compose.stack.animation.Direction,androidx.compose.runtime.Composer,kotlin.Int,androidx.compose.ui.Modifier>){}[0]
final fun com.arkivanov.decompose.extensions.compose.experimental/com_arkivanov_decompose_extensions_compose_experimental_BroadcastBackHandler$stableprop_getter(): kotlin/Int // com.arkivanov.decompose.extensions.compose.experimental/com_arkivanov_decompose_extensions_compose_experimental_BroadcastBackHandler$stableprop_getter|com_arkivanov_decompose_extensions_compose_experimental_BroadcastBackHandler$stableprop_getter(){}[0]
